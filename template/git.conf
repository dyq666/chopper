# 参考笔记
# git 开发规范 https://llp0574.github.io/2016/11/25/git-use/

# 初始化 (一台新的机器)
# git config --global user.name <name>
# git config --global user.email <email>
# git config --global push.default current

# 初始化 (fork 了一个新的 repo)
# git remote add origin <fork_repo>
# git remote add upstream <public_repo>
# (option) git config user.name <name>
# (option) git config config user.email <email>

# alias 中的命令起始字母缩写的全称
# n -> new    增
# d -> del    删
# c -> change 改
# v -> view   查
# l -> list   全查

[alias]
    # add & commit
    a = add
    c = commit -m
    aa = add -A
    aac = !git add -A && git commit -m
    cmsg = commit --amend

    # branch
    o = checkout
    nb = checkout -b
    db = branch -D
    cb = checkout
    cbm = checkout master
    lb = !git branch | cat
    lremoteb = branch -r
    lallb = branch -a

    # stash
    nsh = stash push --include-untracked # stash 所有文件, 包括 untracked
    dsh = stash drop
    vsh = stash show
    lsh = stash list
    popsh = stash pop
    dallsh = stash clear

    # push & pull
    p = push
    pf = push -f
    pullcurrent = !git pull origin $(git rev-parse --abbrev-ref HEAD)
    update = pull upstream master

    # remote
    nrem = remote add origin
    lrem = remote -v

    # rebase
    ri = rebase -i
    mergeri = rebase -i HEAD^^ # 通常用于合并前两个 commit
    mergefirstri = rebase -i --root

    # recover
    recoveradd = reset HEAD      # <file>  staged -> modified | untracked
    recovermodify = checkout --  # <file>  modified -> unmodified
    recoverdefault = !remove     # <file>  untracked -> default
    recoverinit = update-ref -d HEAD  # 重置所有 commit, 仅用于项目初期

    # status
    d = diff
    dc = diff --cached
    s = status

    # log
    lgall = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit
    lg = !git lgall | head -5

    # config
    lconfig = config --list --show-origin

[color]
    ui = true

[user]
    name = {name}
    email = {email}
